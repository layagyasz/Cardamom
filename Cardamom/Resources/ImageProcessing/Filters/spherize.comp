#version 430 core

#define PI 3.1415926535f

#define Y_SCALE_ZENITH 1

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;
layout(rgba32f, binding = 0) uniform image2D in_texture;
layout(rgba32f, binding = 1) uniform image2D out_texture;

layout(location=0) uniform int y_scale;
layout(location=1) uniform float radius;

float scale_y(float y)
{
	if (y_scale == Y_SCALE_ZENITH)
	{
		return cos(PI * y);
	}
	return y;
}

vec3 generate(vec3 v) {
	float y = scale_y(v.y);
	float r = sqrt(1 - y * y);
	float t = 2 * PI * v.x;
	return radius * vec3(r * cos(t), y, r * sin(t));
}

void main() {
    ivec2 position = ivec2(gl_GlobalInvocationID.xy);
    vec4 input = imageLoad(in_texture, position);
    imageStore(out_texture, position, vec4(generate(input.xyz), 1));
}